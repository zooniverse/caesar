apiVersion: v1
data:
  nginx.conf: |+
    upstream docker-caesar {
      server localhost:81;
    }

    server {
      server_name caesar.zooniverse.org caesar-staging.zooniverse.org
      include /etc/nginx/ssl.default.conf;
      gzip_types *;

      location = /commit_id.txt {
        root /static-assets/;
        expires off;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
        add_header 'Access-Control-Allow-Credentials' 'true';
      }

      location ~ ^/assets/ {
        root /static-assets/;
        gzip_static on; # to serve pre-gzipped version
        expires max;
        add_header Cache-Control public;
      }

      location = /favicon.ico {
        root /static-assets/;
        expires max;
        add_header Cache-Control public;
      }

      location = /robots.txt {
        root /static-assets/;
        expires max;
        add_header Cache-Control public;
      }

      location / {
        proxy_pass http://docker-caesar;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: caesar-nginx-conf-staging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caesar-staging-app
  labels:
    app: caesar-staging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: caesar-staging-app
  template:
    metadata:
      labels:
        app: caesar-staging-app
    spec:
      containers:
        - name: caesar-staging-app
          image: zooniverse/caesar:__IMAGE_TAG__
          env:
            - name: RAILS_ENV
              value: staging
            - name: REDIS_URL
              value: redis://caesar-staging-redis:6379
            - name: PORT
              value: "81"
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: SECRET_KEY_BASE
            - name: RAILS_SERVE_STATIC_FILES
              value: 'true'
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: DATABASE_URL
            - name: AWS_REGION
              value: us-east-1
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: AWS_SECRET_ACCESS_KEY
            - name: NEW_RELIC_APP_NAME
              value: Caesar (staging)
            - name: NEW_RELIC_MONITOR_MODE
              value: 'true'
            - name: NEW_RELIC_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: NEW_RELIC_LICENSE_KEY
            - name: PANOPTES_URL
              value: https://panoptes-staging.zooniverse.org
            - name: PANOPTES_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: PANOPTES_CLIENT_ID
            - name: PANOPTES_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: PANOPTES_CLIENT_SECRET
            - name: ROLLBAR_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: ROLLBAR_ACCESS_TOKEN
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: SENTRY_DSN
            - name: SIDEKIQ_WEB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: SIDEKIQ_WEB_PASSWORD
            - name: SIDEKIQ_WEB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: SIDEKIQ_WEB_USERNAME
            - name: KINESIS_STREAM_USERNAME
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: KINESIS_STREAM_USERNAME
            - name: KINESIS_STREAM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: KINESIS_STREAM_PASSWORD
          volumeMounts:
            - name: static-assets
              mountPath: "/static-assets"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "-c", "cp -R /app/public/* /static-assets"]
        - name: caesar-staging-nginx
          image: zooniverse/apps-nginx:xenial
          ports:
            - containerPort: 80
          volumeMounts:
            - name: static-assets
              mountPath: "/static-assets"
            - name: caesar-nginx-config
              mountPath: "/etc/nginx-sites"
      volumes:
        - name: static-assets
          emptyDir: {}
        - name: caesar-nginx-config
          configMap:
            name: caesar-nginx-conf-staging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caesar-staging-sidekiq
  labels:
    app: caesar-staging-sidekiq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: caesar-staging-sidekiq
  template:
    metadata:
      labels:
        app: caesar-staging-sidekiq
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - caesar-production-sidekiq
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: caesar-staging-sidekiq
          image: zooniverse/caesar:__IMAGE_TAG__
          args: ["/app/docker/start-sidekiq.sh"]
          env:
            - name: RAILS_ENV
              value: staging
            - name: REDIS_URL
              value: redis://caesar-staging-redis:6379
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: SECRET_KEY_BASE
            - name: RAILS_SERVE_STATIC_FILES
              value: 'true'
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: DATABASE_URL
            - name: AWS_REGION
              value: us-east-1
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: AWS_SECRET_ACCESS_KEY
            - name: NEW_RELIC_APP_NAME
              value: Caesar (staging)
            - name: NEW_RELIC_MONITOR_MODE
              value: 'true'
            - name: NEW_RELIC_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: NEW_RELIC_LICENSE_KEY
            - name: PANOPTES_URL
              value: https://panoptes-staging.zooniverse.org
            - name: PANOPTES_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: PANOPTES_CLIENT_ID
            - name: PANOPTES_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: PANOPTES_CLIENT_SECRET
            - name: ROLLBAR_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: ROLLBAR_ACCESS_TOKEN
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: SENTRY_DSN
            - name: SIDEKIQ_WEB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: SIDEKIQ_WEB_PASSWORD
            - name: SIDEKIQ_WEB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: caesar-staging-env-vars
                  key: SIDEKIQ_WEB_USERNAME
---
apiVersion: v1
kind: Service
metadata:
  name: caesar-staging-app
spec:
  selector:
    app: caesar-staging-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: caesar-staging-redis
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caesar-staging-redis
  labels:
    app: caesar-staging-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: caesar-staging-redis
  template:
    metadata:
      labels:
        app: caesar-staging-redis
    spec:
      containers:
        - name: caesar-staging-redis
          image: redis
          volumeMounts:
          - name: caesar-staging-redis-data
            mountPath: "/data"
      volumes:
      - name: caesar-staging-redis-data
        persistentVolumeClaim:
          claimName: caesar-staging-redis
---
apiVersion: v1
kind: Service
metadata:
  name: caesar-staging-redis
spec:
  selector:
    app: caesar-staging-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: NodePort