<%= simple_form_for @reducer, as: :reducer, url: [@reducible, @reducer.becomes(Reducer)], html: { class: 'form-vertical' } do |f| %>
  <%= f.hidden_field :type, value: params.dig(:reducer, :type) || params[:type] %>

  <%= f.input :key %>

  <% @reducer.class.configuration_fields.each do |key, options| %>
    <% if options.key?(:enum) %>
      <%= f.input key, collection: options[:enum] %>
    <% else %>
      <%= f.input key %>
    <% end %>
  <% end %>

  <%= f.input :topic, collection: Reducer.topics.keys %>

  <%= f.input :reducible_type, :as => :hidden %>

  <div class="panel panel-info">
    <div class="panel-heading"><a role="button" data-toggle="collapse" href="#groupingInputs" aria-expanded="false" aria-controls="groupingInputs">Grouping <span class="caret"></span></a></div>
    <div class="panel-body collapse" id="groupingInputs">
      <p>You can group extracts before reduction, producing one reduction per group</p>
      <%= f.simple_fields_for :grouping do |grouping| %>
        <%= grouping.input :field_name %>
        <%= grouping.input :if_missing, collection: ['ignore', 'error'] %>
      <% end %>
    </div>
  </div>


  <div class="panel panel-info">
    <div class="panel-heading"><a role="button" data-toggle="collapse" href="#filterInputs" aria-expanded="false" aria-controls="filterInputs">Filters <span class="caret"></span></a></div>
    <div class="panel-body collapse" id="filterInputs">
      <p>Using filters it is possible to limit which extracts this reducer works on.</p>
      <%= f.simple_fields_for :filters do |filters| %>
        <%= filters.input :from, input_html: { value: @reducer.filters['from'] } %>
        <%= filters.input :to, input_html: { value: @reducer.filters['to'] } %>
        <%= filters.input :extractor_keys, placeholder: '["list", "of", "keys"]', input_html: { value: @reducer.filters['extractor_keys'].to_s } %>
        <%= filters.input :repeated_classifications, collection: ::Filters::FilterByRepeatedness::REPEATED_CLASSIFICATIONS, selected: @reducer.filters['repeated_classifications'] %>
        <%= filters.input :empty_extracts, collection: ::Filters::FilterByEmptiness::EMPTY_EXTRACTS, selected: @reducer.filters['empty_extracts'] %>
        <%= filters.input :training_behavior, collection: ::Filters::FilterByTrainingBehavior::TRAINING_BEHAVIOR, selected: @reducer.filters['training_behavior'] %>
      <% end %>
    </div>
  </div>


  <%= f.submit class: 'btn btn-primary' %>
  <% if @reducible_type == :Workflow %>
    <%= link_to 'Back', workflow_path(@reducible, anchor: 'reducers'), class: 'btn btn-default' %>
  <% elsif @reducible_type == :Project %>
    <%= link_to 'Back', project_path(@reducible, anchor: 'reducers'), class: 'btn btn-default' %>
  <% end %>
<% end %>
