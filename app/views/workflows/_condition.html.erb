<% case condition %>
<% when Conditions::Conjunction %>
  <span class="nested-condition">
  <% condition.operations.each_with_index do |c, i| %>
    <% if i > 0 %><span class="label label-success yields-text">and</span><% end %><%= render_condition c %><% end %>
  </span>
<% when Conditions::Disjunction %>
  <span class="nested-condition">
  <% condition.operations.each_with_index do |c, i| %>
    <% if i > 0 %><span class="label label-success yields-text">or</span><% end %>
    <%= render_condition c %>
  <% end %>
  </span>
<% when Conditions::Negation %>
  <span class="nested-condition">
    <span class="label label-danger yields-text">not</span>
    <%= render_condition condition.operation %>
  </span>
<% when Conditions::Comparison %>
  <span class="nested-condition">
  <% condition.operations.each_with_index do |c, i| %>
    <% if i > 0 %><span class="yields-text"><% case condition.type when
        'eq' %>=<% when
        'lt' %>&lt;<% when
        'lte' %>&le;<% when
        'gt' %>&gt;<% when
        'gte' %>&ge;<% end %></span><% end %><%= render_condition c %><% end %>
  </span>
<% when Conditions::Lookup %>
  <span class="text-info yields-text">
    <abbr title="Default value: <%= condition.absent_val %>"><%= condition.key %></abbr>
  </span>
<% when Conditions::Constant %>
  <span class="text-primary yields-text"><%= condition.value %></span>
<% when Conditions::TextTransform %>
  <span class="nested-condition">
    <%= render_condition condition.operation %>
    as
    <span class="text-primary yields-text"><% case condition.transform when
      :upcase %>uppercase<% when
      :downcase %>lowercase<% when
      :to_i %>integer<% when
      :to_f %>float<% end %></span>
  </span>
<% else %>
  <%= debug condition %>
<% end %>
